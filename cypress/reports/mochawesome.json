{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-09-12T16:17:48.061Z",
    "end": "2021-09-12T16:19:08.504Z",
    "duration": 80443,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3ffdd29a-3935-4001-ac6a-f978c94a6ad6",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f5cea616-b2c7-4450-900a-247a05e4e7b2",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "1912863a-7a20-4d48-8695-69bd9e07d2b7",
              "parentUUID": "f5cea616-b2c7-4450-900a-247a05e4e7b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1912863a-7a20-4d48-8695-69bd9e07d2b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 153,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "425597d6-46bc-467d-ad13-eb9bf4e54dea",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "60adbd08-a3b4-4f4d-828e-ae679904cf6e",
              "parentUUID": "425597d6-46bc-467d-ad13-eb9bf4e54dea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "5dc0d289-7773-4020-93a2-90e9411003e2",
              "parentUUID": "425597d6-46bc-467d-ad13-eb9bf4e54dea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "5682b87d-9788-4b17-b8f2-c87036874f33",
              "parentUUID": "425597d6-46bc-467d-ad13-eb9bf4e54dea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "f505a407-c508-4251-8bd8-ea1c919cb277",
              "parentUUID": "425597d6-46bc-467d-ad13-eb9bf4e54dea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "6e5c2a33-ed51-49d1-81a5-3e71af6c373a",
              "parentUUID": "425597d6-46bc-467d-ad13-eb9bf4e54dea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "3549c5d3-7515-4bea-94f3-4a047db55cc9",
              "parentUUID": "425597d6-46bc-467d-ad13-eb9bf4e54dea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "5ae988cc-1110-4b50-a394-1c09f96ff0db",
              "parentUUID": "425597d6-46bc-467d-ad13-eb9bf4e54dea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "60adbd08-a3b4-4f4d-828e-ae679904cf6e",
            "5dc0d289-7773-4020-93a2-90e9411003e2",
            "5682b87d-9788-4b17-b8f2-c87036874f33",
            "f505a407-c508-4251-8bd8-ea1c919cb277",
            "6e5c2a33-ed51-49d1-81a5-3e71af6c373a",
            "3549c5d3-7515-4bea-94f3-4a047db55cc9",
            "5ae988cc-1110-4b50-a394-1c09f96ff0db"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 894,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e7c5659d-967b-41d6-b976-d1ec232d276a",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "cca1fbe2-b729-4371-81a9-37721a8ffd09",
              "parentUUID": "e7c5659d-967b-41d6-b976-d1ec232d276a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "1814abd2-e3ee-46e7-b8d6-9676ccf10209",
              "parentUUID": "e7c5659d-967b-41d6-b976-d1ec232d276a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cca1fbe2-b729-4371-81a9-37721a8ffd09",
            "1814abd2-e3ee-46e7-b8d6-9676ccf10209"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 302,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "24b861c7-ab82-4559-866f-c9e43954bbaa",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "6c8a5908-b31f-4f93-a4b1-233b6dc40cce",
              "parentUUID": "24b861c7-ab82-4559-866f-c9e43954bbaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "7bb805be-24c0-4011-8eb4-98e46e870833",
              "parentUUID": "24b861c7-ab82-4559-866f-c9e43954bbaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 339,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "c0ff70e2-babb-4b9e-802c-cf60338e4e34",
              "parentUUID": "24b861c7-ab82-4559-866f-c9e43954bbaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "e0b2ebfe-71aa-44fb-b8cd-29adf722be03",
              "parentUUID": "24b861c7-ab82-4559-866f-c9e43954bbaa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c8a5908-b31f-4f93-a4b1-233b6dc40cce",
            "7bb805be-24c0-4011-8eb4-98e46e870833",
            "c0ff70e2-babb-4b9e-802c-cf60338e4e34",
            "e0b2ebfe-71aa-44fb-b8cd-29adf722be03"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 726,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7fc516ea-8706-4b63-8614-6a5a850dc821",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "b69087a3-73a8-4c72-bf54-200174cd32bb",
              "parentUUID": "7fc516ea-8706-4b63-8614-6a5a850dc821",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "43e9563b-340a-4754-b5f3-c5176a84993a",
              "parentUUID": "7fc516ea-8706-4b63-8614-6a5a850dc821",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b69087a3-73a8-4c72-bf54-200174cd32bb",
            "43e9563b-340a-4754-b5f3-c5176a84993a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 573,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "144f55ef-ab5a-4b63-91d0-a65ec0471dba",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "44138486-0cee-4ff3-b588-26a8aba376ee",
              "parentUUID": "144f55ef-ab5a-4b63-91d0-a65ec0471dba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "b7ff0350-a054-469b-8a6d-3257fb643dcc",
              "parentUUID": "144f55ef-ab5a-4b63-91d0-a65ec0471dba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "44138486-0cee-4ff3-b588-26a8aba376ee",
            "b7ff0350-a054-469b-8a6d-3257fb643dcc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 207,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "22a32739-2d8b-4ffc-a396-9786e35a7a48",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 439,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "441a20a5-e7bc-4bd6-a6cf-8d1aef8ae305",
              "parentUUID": "22a32739-2d8b-4ffc-a396-9786e35a7a48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8678,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "a920519b-c6f3-4456-ac38-f2341af426ba",
              "parentUUID": "22a32739-2d8b-4ffc-a396-9786e35a7a48",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "441a20a5-e7bc-4bd6-a6cf-8d1aef8ae305",
            "a920519b-c6f3-4456-ac38-f2341af426ba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9117,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "274b2407-2b79-420d-89e6-d74346cdd360",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "8251dbe6-c3d3-48a9-b730-341241ab69b9",
              "parentUUID": "274b2407-2b79-420d-89e6-d74346cdd360",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8579,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "d57094d3-66fc-4d4e-8e91-3b7055df169f",
              "parentUUID": "274b2407-2b79-420d-89e6-d74346cdd360",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1327,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "44317690-dcb1-42ad-bd8b-f945dde4998c",
              "parentUUID": "274b2407-2b79-420d-89e6-d74346cdd360",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8251dbe6-c3d3-48a9-b730-341241ab69b9",
            "d57094d3-66fc-4d4e-8e91-3b7055df169f",
            "44317690-dcb1-42ad-bd8b-f945dde4998c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12188,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c4e522fd-dd06-4e50-ba2b-7cdfe347bbd2",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "d5069684-9180-4675-8b8a-b8b20e5bce1e",
              "parentUUID": "c4e522fd-dd06-4e50-ba2b-7cdfe347bbd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "639b410c-afd6-4627-9470-1588b0c3bcb3",
              "parentUUID": "c4e522fd-dd06-4e50-ba2b-7cdfe347bbd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "ca841c2a-7e57-40ff-8723-e8d93a716514",
              "parentUUID": "c4e522fd-dd06-4e50-ba2b-7cdfe347bbd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2312,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "ed229a9b-c66f-4ce8-8993-524fb30ebe7d",
              "parentUUID": "c4e522fd-dd06-4e50-ba2b-7cdfe347bbd2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5069684-9180-4675-8b8a-b8b20e5bce1e",
            "639b410c-afd6-4627-9470-1588b0c3bcb3",
            "ca841c2a-7e57-40ff-8723-e8d93a716514",
            "ed229a9b-c66f-4ce8-8993-524fb30ebe7d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2621,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b3394aa2-bf4c-44bd-9510-e0bfcf698d46",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4323,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ec586fb8-3089-4c0c-9697-5013b7deb418",
              "parentUUID": "b3394aa2-bf4c-44bd-9510-e0bfcf698d46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4339,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "867047ae-667b-4560-82a2-8b08fe7dcffa",
              "parentUUID": "b3394aa2-bf4c-44bd-9510-e0bfcf698d46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4263,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "06d8b11d-d6f8-4c7a-ae8f-4e19185e5ad1",
              "parentUUID": "b3394aa2-bf4c-44bd-9510-e0bfcf698d46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4349,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d74ade04-39e8-424c-82ec-927cb18b2706",
              "parentUUID": "b3394aa2-bf4c-44bd-9510-e0bfcf698d46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4320,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "96b84822-bff5-4716-ae80-8bae69ce7a90",
              "parentUUID": "b3394aa2-bf4c-44bd-9510-e0bfcf698d46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4288,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a42420d8-0be6-47be-bc65-d848697f61ac",
              "parentUUID": "b3394aa2-bf4c-44bd-9510-e0bfcf698d46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4289,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5533769c-5565-49f4-88ec-9a572395609e",
              "parentUUID": "b3394aa2-bf4c-44bd-9510-e0bfcf698d46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4309,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8e89711b-747c-45cf-8baa-e670a4044d31",
              "parentUUID": "b3394aa2-bf4c-44bd-9510-e0bfcf698d46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4410,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1d912cda-969f-439e-b4be-7aefc76ac4ff",
              "parentUUID": "b3394aa2-bf4c-44bd-9510-e0bfcf698d46",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ec586fb8-3089-4c0c-9697-5013b7deb418",
            "867047ae-667b-4560-82a2-8b08fe7dcffa",
            "06d8b11d-d6f8-4c7a-ae8f-4e19185e5ad1",
            "d74ade04-39e8-424c-82ec-927cb18b2706",
            "96b84822-bff5-4716-ae80-8bae69ce7a90",
            "a42420d8-0be6-47be-bc65-d848697f61ac",
            "5533769c-5565-49f4-88ec-9a572395609e",
            "8e89711b-747c-45cf-8baa-e670a4044d31",
            "1d912cda-969f-439e-b4be-7aefc76ac4ff"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38890,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4e2ad487-f625-4167-a0b4-6e3044099cdb",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4370,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c837cbc6-6c63-4383-9930-173b11692225",
              "parentUUID": "4e2ad487-f625-4167-a0b4-6e3044099cdb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4326,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1d1718be-f208-4d72-b466-fb0d9c86a376",
              "parentUUID": "4e2ad487-f625-4167-a0b4-6e3044099cdb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4279,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "31efe1d4-1ec5-4c07-a98c-72caa8a00008",
              "parentUUID": "4e2ad487-f625-4167-a0b4-6e3044099cdb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c837cbc6-6c63-4383-9930-173b11692225",
            "1d1718be-f208-4d72-b466-fb0d9c86a376",
            "31efe1d4-1ec5-4c07-a98c-72caa8a00008"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12975,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4a01551a-dd76-402e-867d-78b1aed2f127",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "19cccfd6-7a00-4697-bdf4-a9430c13cdde",
              "parentUUID": "4a01551a-dd76-402e-867d-78b1aed2f127",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 421,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "eeb7ef55-ac60-4090-a1de-b003301094d9",
              "parentUUID": "4a01551a-dd76-402e-867d-78b1aed2f127",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "19cccfd6-7a00-4697-bdf4-a9430c13cdde",
            "eeb7ef55-ac60-4090-a1de-b003301094d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 894,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}